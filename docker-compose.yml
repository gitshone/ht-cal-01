version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ht-cal-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-ht_cal_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ht-cal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-ht_cal_db}"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: apps/backend/docker/Dockerfile
    container_name: ht-cal-backend
    restart: unless-stopped
    env_file:
      - apps/backend/.env
    environment:
      HOST: 0.0.0.0
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ht-cal-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  ht-cal-network:
    driver: bridge